[cziso]
# create expect template
create_expect_template = etc/create-iso.expect

# restore expect template
restore_expect_template = etc/restore-iso.expect

# Temporary directory to store immediate and generated ISO images
temp_directory = /a/tmp/dir

# Because Clonezilla places the generated ISO image to /home/partimag, we mount
# a NFS directory to that location.  Thus we need to configure an interface and
# get it a temporary IP address.  This should be on the physical host's private
# interface.  
private_iface = eth1

# To generate new Clonezilla ISO images
genisoimage_command = genisoimage -A 'Clonezilla live CD' -f -r -hide-rr-moved -hide-joliet-trans-tbl -J -l -allow-limited-size -b syslinux/isolinux.bin -c syslinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -efi-boot EFI/images/efiboot.img -no-emul-boot

[google]
# Service account credentials for upload only.  If relative path, assumed to
# be relative to etc dir.  You do not need credentials to download (assuming
# your directory is readable to all).  To acquire your own credentials, see
# https://developers.google.com/identity/protocols/OAuth2ServiceAccount
service_account_credentials = creds.json

# upload chunksize (25MB)
chunk_size=26214400

# default dir to upload files to (must be editable to service account
# credentials above)
default_drive_id = 0B3cw7uKWQ3fXcmdfRHBCTV9KaUU

[clonezilla_custom]
# This is a custom Clonezilla Live ISO with some special modifications (e.g., a
# tty console) that we built to provide automated ISO creation and restore.  We
# store the file remotely in Google drive to make it easier to manage updates
# and cache for a specified period.

# local filename of cached ISO (in temp dir above)
filename = clonezilla-live-custom.iso

# the ISO's Google drive id
google_drive_id = 0B9KU3ZAXwNEhcllFVEh1ZUdqR00

# Max days to cache file before downloading it fresh from Google drive
max_cache_age = 7

[clonezilla_regular]
# This is a regular Clonezilla Live ISO we utilize for advanced cases.
# We also store the file remotely in Google drive to make it easier to manage
# updates and cache for a specified period.

# local filename of cached ISO (in temp dir above)
filename = clonezilla-live-regular.iso

# the ISO's Google drive id
google_drive_id = 0B9KU3ZAXwNEhblUxeXNIOTBWSjA

# Max days to cache file before downloading it fresh from Google drive
max_cache_age = 7
